using System.Linq;
using Content.Shared.Damage;
using Content.Shared.FixedPoint;
using Content.Shared.Genetics;
using Content.Shared.Humanoid;
using Content.Shared.Mind;
using Content.Shared.Mobs;
using Content.Shared.Mobs.Components;
using Content.Shared.Popups;
using Content.Shared.Roles.Components;
using Robust.Shared.Random;
using Robust.Shared.Utility;

namespace Content.Server.Genetics.System;

public sealed class EmpatheticThoughtGenSystem : EntitySystem
{
    [Dependency] private readonly EntityLookupSystem _entityLookup = default!;
    [Dependency] private readonly SharedMindSystem _mindSystem = default!;
    [Dependency] private readonly SharedPopupSystem _popup = default!;
    [Dependency] private readonly IRobustRandom _random = default!;

    public override void Update(float frameTime)
    {
        base.Update(frameTime);

        var query = EntityQueryEnumerator<EmpatheticThoughtGenComponent>();
        while (query.MoveNext(out var uid, out var comp))
        {
            comp.NextTimeTick -= frameTime;

            if (comp.NextTimeTick <= 0)
            {
                comp.NextTimeTick = _random.NextFloat(comp.MinInterval, comp.MaxInterval);
                GenerateEmpatheticThought(uid, comp);
            }
        }
    }

    #region Base Logic
    private void GenerateEmpatheticThought(EntityUid uid, EmpatheticThoughtGenComponent comp)
    {
        var nearbyEntities = _entityLookup.GetEntitiesInRange<HumanoidAppearanceComponent>(Transform(uid).Coordinates, comp.Range)
            .Where(e => e.Owner != uid).ToList();
        if (nearbyEntities.Count == 0)
            return;

        var target = _random.Pick(nearbyEntities);
        var thought = GenerateThoughtFor(target);

        _popup.PopupEntity(thought, uid, uid, PopupType.Medium);
    }

    private string GenerateThoughtFor(EntityUid target)
    {
        if (HasComp<PsyResistGenComponent>(target))
        {
            return "*Мысли заблокированы псионическим барьером*";
        }

        if (!TryComp<MobStateComponent>(target, out var mobState) || mobState.CurrentState == MobState.Dead)
        {
            return "*...мёртвая тишина...*";
        }

        var thoughts = new List<string>();

        AddHealthThoughts(target, thoughts);

        AddDamageThoughts(target, thoughts);

        if (_mindSystem.TryGetMind(target, out var mindId, out var mind))
        {
            thoughts.AddRange(GetRoleSpecificThoughts(mindId, mind));
        }

        return thoughts.Count > 0
            ? _random.Pick(thoughts)
            : "*...*";
    }

    private void AddHealthThoughts(EntityUid target, List<string> thoughts)
    {
        var healthFraction = GetHealthFraction(target);
        var damageLevel = 1f - healthFraction;

        if (damageLevel == 0f)
            return;

        if (damageLevel <= 0.3f)
        {
            thoughts.AddRange(new[]
            {
                "*Ай, зацепился...*",
                "*Что-то колет в боку...*",
                "*Голова слегка пульсирует.*",
                "*Синяк, кажется...*",
                "*Чувствую себя разбитым.*"
            });
        }
        else if (damageLevel <= 0.6f)
        {
            thoughts.AddRange(new[]
            {
                "*Блин, как же больно...*",
                "*Надо перевязать рану...*",
                "*Дышать трудно...*",
                "*Всё плывёт перед глазами.*",
                "*Нужен болеутоляющий...*",
                "*Кровь... надо остановить кровь.*"
            });
        }
        else if (damageLevel <= 0.9f)
        {
            thoughts.AddRange(new[]
            {
                "*Теряю силы...*",
                "*Помогите...*",
                "*Не могу двигаться...*",
                "*Боже, как же это больно!*",
                "*Всё... я не выживу...*",
                "*Глаза закрываются...*"
            });
        }
        else
        {
            thoughts.AddRange(new[]
            {
                "*Всё... конец...*",
                "*Прощайте...*",
                "*Больше не могу...*",
                "*Кто-нибудь... спасите...*",
                "*Мама...*",
                "*Темно... так темно...*"
            });
        }
    }

    private void AddDamageThoughts(EntityUid target, List<string> thoughts)
    {
        if (!TryComp<DamageableComponent>(target, out var damage))
            return;

        foreach (var (damageType, amount) in damage.Damage.DamageDict)
        {
            if (amount <= 0) continue;

            switch (damageType)
            {
                case "Asphyxiation":
                    thoughts.AddRange(new[] {
                        "*Не могу... дышать...*",
                        "*Лёгкие горят!*",
                        "*Воздуха... нужно воздуха...*",
                        "*Кто-то... перекройте вентиляцию...*",
                        "*Голова кружится... не хватает кислорода...*",
                        "*Всё плывёт... надо найти скафандр...*"
                    });
                    break;

                case "Bloodloss":
                    thoughts.AddRange(new[] {
                        "*Так... холодно...*",
                        "*Всё тело... леденеет...*",
                        "*Кровь... слишком много крови на полу...*",
                        "*Почему так... темнеет...*",
                        "*Надо бы... перевязаться...*",
                        "*Где медик?! Я истекаю кровью!*"
                    });
                    break;

                case "Blunt":
                    thoughts.AddRange(new[] {
                        "*Всё тело болит...*",
                        "*Кажется, сломалось... что-то важное...*",
                        "*Кто-то устроил мне встречу с полом...*",
                        "*Надо бы проверить... все ли кости целы...*",
                        "*Ощущение, что меня переехал грузовик...*",
                        "*Эти синяки будут красиво смотреться...*"
                    });
                    break;

                case "Cellular":
                    thoughts.AddRange(new[] {
                        "*Клетки горят!*",
                        "*Тело... разваливается на части...*",
                        "*Что-то не так... на молекулярном уровне...*",
                        "*Ощущение, будто меня растворяют...*",
                        "*Кто-то играет с моей ДНК...*",
                        "*Это не боль... это что-то хуже...*"
                    });
                    break;

                case "Caustic":
                    thoughts.AddRange(new[] {
                        "*Кожа пузырится!*",
                        "*АААА! Это жжётся!*",
                        "*Кто-то вылейте на меня воду!*",
                        "*Химический ожог... самый болезненный...*",
                        "*Пахнет жареным мясом... это я?*",
                        "*Надо срочно в дезинфекцию!*"
                    });
                    break;

                case "Cold":
                    thoughts.AddRange(new[] {
                        "*Зубы стучат...*",
                        "*Всё тело... дрожит...*",
                        "*Так холодно... что даже больно...*",
                        "*Пальцы... не чувствую пальцев...*",
                        "*Обморожение - это не весело...*",
                        "*Где бы найти тёплый уголок...*"
                    });
                    break;

                case "Heat":
                    thoughts.AddRange(new[] {
                        "*Слишком жарко...*",
                        "*Горю... буквально...*",
                        "*Почему я пахну жареным?*",
                        "*Надо бы... отползти от этого пламени...*",
                        "*Ожоги... везде ожоги...*",
                        "*Это не сауна... это ад...*"
                    });
                    break;

                case "Piercing":
                case "Slash":
                    thoughts.AddRange(new[] {
                        "*Кровь... много крови...*",
                        "*Кажется, что-то важное прокололи...*",
                        "*Где медик?! У меня течь!*",
                        "*Этот нож был... совсем нестерильный...*",
                        "*Рваная рана... самая противная...*",
                        "*Кто-нибудь... тампон?!*"
                    });
                    break;

                case "Poison":
                    thoughts.AddRange(new[] {
                        "*Что-то не так с желудком...*",
                        "*Всё крутится... и не только в голове...*",
                        "*Вырвет... сейчас вырвет...*",
                        "*Кто-то подмешал мне яд...*",
                        "*Печень... болит печень...*",
                        "*На вкус как... смерть...*"
                    });
                    break;

                case "Radiation":
                    thoughts.AddRange(new[] {
                        "*Чувствую... радиацию...*",
                        "*Кости... болят кости...*",
                        "*Во рту... металлический привкус...*",
                        "*Сколько же у меня... теперь раков?*",
                        "*Кожа... странно зудит...*",
                        "*Надо бы... проверить дозиметр... если бы он был...*"
                    });
                    break;

                case "Shock":
                    thoughts.AddRange(new[] {
                        "*Мышцы сводит...*",
                        "*Тело... не слушается...*",
                        "*Кто-то выключите этот ток!*",
                        "*Судороги... везде судороги...*",
                        "*Ощущение, будто меня жуёт розетка...*",
                        "*Зубы... сами стучат...*"
                    });
                    break;

                case "Holy":
                    thoughts.AddRange(new[] {
                        "*Голос... в голове...*",
                        "*Кто-то шепчет... но никого нет...*",
                        "*Святость... жжётся...*",
                        "*Моя душа... болит...*",
                        "*Это не просто боль... это искупление...*",
                        "*Грехи... все мои грехи...*"
                    });
                    break;
            }
        }
    }

    private IEnumerable<string> GetRoleSpecificThoughts(EntityUid mindId, MindComponent mind)
    {
        bool isAntag = false;
        string? antagType = null;

        foreach (var roleId in mind.MindRoles)
        {
            if (!TryComp<MindRoleComponent>(roleId, out var role))
                continue;

            if (role.Antag || role.ExclusiveAntag)
            {
                isAntag = true;
                antagType = role.AntagPrototype;
                break;
            }
        }

        if (isAntag)
        {
            yield return GetAntagThought(antagType);
        }

        foreach (var roleId in mind.MindRoles)
        {
            if (!TryComp<MindRoleComponent>(roleId, out var role))
                continue;

            if (role.JobPrototype != null)
            {
                yield return GetJobThought(role.JobPrototype.Value);
            }

            if (role.RoleType != null)
            {
                yield return GetRoleTypeThought(role.RoleType);
            }
        }

        if (!isAntag)
        {
            yield return _random.Pick(new[] {
                "*Кофе бы...*",
                "*Когда смена закончится?*",
                "*Интересно, что в той комнате?*",
                "*Где бы найти перекусить?*",
                "*Эти светильники жутко мигают...*",
                "*Кто-то должен навести порядок... но не я*",
                "*Почему в вендомате всегда нет сникерсов?*",
                "*Интересно, что будет, если нажать эту кнопку?*",
                "*Надо бы сходить в бар... для социализации*",
                "*Чем бы таким полезным заняться?*",
                "*Почему так шумят вентиляторы?*",
                "*Надо бы поспать... но на работе нельзя*",
                "*Кто-то опять забыл закрыть шкафчик*",
                "*Интересно, почему все так странно на меня смотрят?*",
                "*Надо бы убрать стол... потом*",
                "*Почему в коридоре всегда холодно?*",
                "*Кто-то должен починить принтер... но не я*",
                "*Где бы найти инструкцию?*",
                "*Надо бы перерыв... пятичасовой*",
                "*Почему мой стул всегда скрипит?*",
                "*Кто-то опять съел мой обед из холодильника*",
                "*Интересно, что там на обед?*",
                "*Надо бы проверить почту... или нет*",
                "*Почему все двери такие скрипучие?*",
                "*Где моя айди? А, он на мне...*",
                "*Надо бы выпить воды... или чего покрепче*",
                "*Кто-то должен вынести мусор... но явно не я*"
            });
        }
    }

    private string GetAntagThought(string? antagType)
    {
        return antagType switch
        {
            "Traitor" => _random.Pick(new[] {
                "*Синдикат ждёт отчёта...*",
                "*Где бы найти ядерный диск...*",
                "*Эти идиоты даже не подозревают...*",
                "*Всё идёт по плану... почти*"
            }),

            "Thief" => _random.Pick(new[] {
                "*Что бы ещё стащить?*",
                "*Это не воровство, это 'перераспределение'*",
                "*Главное - не попасться СБ... опять*",
                "*Ох, какая красивая вещичка...*"
            }),

            "SpaceNinja" => _random.Pick(new[] {
                "*Тени шепчут...*",
                "*Невидимый как ветер...*",
                "*Клинок жаждет крови...*",
                "*Они даже не увидят смерти...*"
            }),

            "Nukeops" => _random.Pick(new[] {
                "*Ядерный заряд активирован...*",
                "*Смерть Nanotrasen!*",
                "*Где бы найти капитана?..*",
                "*Всё ради Синдиката!*"
            }),

            "ParadoxClone" => _random.Pick(new[] {
                "*Я должен убить оригинал...*",
                "*Почему я чувствую дежавю?*",
                "*Где этот чертов 'я'?..*",
                "*Только один из нас выживет...*"
            }),

            "HeadRev" => _random.Pick(new[] {
                "*Смерть командованию!*",
                "*Товарищи, восстание начинается!*",
                "*Мы свергнем тиранов!*",
                "*Где мой верный революционер?*"
            }),

            "Rev" => _random.Pick(new[] {
                "*Долой капитализм!*",
                "*Я готов умереть за революцию!*",
                "*Наш день настал!*",
                "*Где бы найти оружие...*"
            }),

            "Wizard" => _random.Pick(new[] {
                "*Кек-кек-кек!*",
                "*Моя магия уничтожит вас всех!*",
                "*Где бы найти магический кристалл?*",
                "*Эти смертные такие забавные...*"
            }),

            "InitialInfected" => _random.Pick(new[] {
                "*Что-то не так с моей кожей...*",
                "*Так хочется кусаться...*",
                "*Голоса... они говорят мне заражать...*",
                "*Я не болен... я улучшен!*"
            }),

            "Zombie" => _random.Pick(new[] {
                "*Мозги...*",
                "*Уууууу...*",
                "*Хочу свежего мяса...*",
                "*Где живые?..*"
            }),

            _ => "*Они ещё не знают, кто я...*"
        };
    }

    private string GetJobThought(string jobId)
    {
        return jobId switch
        {
            // Command
            "Captain" => _random.Pick(new[] {
                "*Где мой боевой клоун?..*",
                "*Почему я вообще здесь работаю?*",
                "*Кто-то должен навести порядок... видимо, это я.*"
            }),

            "HeadOfPersonnel" => _random.Pick(new[] {
                "*Бюрократия никогда не кончается...*",
                "*Ещё одна форма 34-B...*",
                "*Где этот чёртов капитан?*"
            }),

            "HeadOfSecurity" => _random.Pick(new[] {
                "*Всех бы в бриг... всех...*",
                "*Почему у нас столько идиотов в отделе?*",
                "*Надо бы проверить арсенал...*"
            }),

            "ChiefEngineer" => _random.Pick(new[] {
                "*Где эти чёртовы техники?*",
                "*Если я ещё раз увижу разгерметизацию...*",
                "*Почему все ЛКП одновременно сломались?*",
                "*Надо бы проверить теслу... или пусть само работает?*",
                "*Кто опять оставил плазму в коридоре?!*"
            }),

            "ChiefMedicalOfficer" => _random.Pick(new[] {
                "*Опять СБ притащили кого-то без мозга...*",
                "*Где мои хирургические инструменты? Опять стажёры растащили?*",
                "*Это не пациент, это мешок с костями...*",
                "*Кто-то должен лечить этих идиотов... увы, это я.*",
                "*Если я ещё раз увижу клоуна в реанимации...*"
            }),

            "ResearchDirector" => _random.Pick(new[] {
                "*Наука не терпит спешки... но хочется побыстрее...*",
                "*Где мои учёные? Опять что-то взрывают?*",
                "*Это не безумие, это передовые исследования!*",
                "*Если бы у меня был кредит за каждый взрыв...*",
                "*Почему все образцы всегда убегают?*",
                "*Надо бы проверить, что там с сингулярностью... потом.*"
            }),

            // Engineering
            "StationEngineer" => _random.Pick(new[] {
                "*Почему все ЛКП такие далеко?*",
                "*Кто опять сжёг проводку?*",
                "*Надо бы проверить СМЭС... или сделать вид что проверял*",
                "*Если бы мне платили за каждый ремонт...*",
                "*Это не авария, это 'особенность' энергосистемы*"
            }),

            "AtmosphericTechnician" => _random.Pick(new[] {
                "*Пахнет плазмой...*",
                "*Кто оставил вентиляцию открытой?*",
                "*Надо проверить трубы... или можно сделать вид?*",
                "*Это не утечка, это 'специальная вентиляция'*",
                "*Почему все баллоны всегда пустые?*",
                "*Если бы воздух был видимым...*"
            }),

            "TechnicalAssistant" => _random.Pick(new[] {
                "*Надеюсь, меня не попросят это починить...*",
                "*Я вообще тут зачем?*",
                "*Главное - делать умный вид*",
                "*Надо найти инженера... любого инженера*",
                "*Это не моя должностная инструкция!*",
                "*Может, пойду в бар вместо работы?*"
            }),

            // Medical
            "MedicalDoctor" => _random.Pick(new[] {
                "*Надо бы стерилизовать скальпель...*",
                "*Опять СБ притащило 'пациента' без головы...*",
                "*Кто-то должен лечить этих идиотов...*",
                "*Где мои хирургические перчатки? Опять клоун стащил?*",
                "*Это не медицинский случай, это мусор для крематория*",
                "*Надо больше обезболивающего... мне, не пациенту*"
            }),

            "Chemist" => _random.Pick(new[] {
                "*Что если смешать всё в одном шприце?*",
                "*Это не передоз, это 'экспериментальная терапия'*",
                "*Главное - не пробовать свои же препараты...*",
                "*Кому нужна инструкция по применению?*",
                "*Этот коктейль либо вылечит, либо убьёт... 50/50*",
                "*Где эти тупые стажёры? Надо тестировать новые препараты*"
            }),

            "Geneticist" => _random.Pick(new[] {
                "*Может, клонируем клоуна?*",
                "*Ошибка 404: ДНК не найдено*",
                "*Это не мутация, это 'улучшение'*",
                "*Кто выпустил обезьян? Опять я?*",
                "*Где мой кофе? А, его клон выпил...*",
                "*Клонирование - это как лотерея, только с конечностями*"
            }),

            "Paramedic" => _random.Pick(new[] {
                "*Где этот идиот-пациент?*",
                "*Не дышишь? И не надо!*",
                "*Это не труп, это 'пациент с отсроченной реанимацией'*",
                "*Кто-то должен спасать этих дебилов...*",
                "*Надо бы новый носилки... или мешок для тел*",
                "*Если пациент кричит - значит жив. Пока не закричал*"
            }),

            "Psychologist" => _random.Pick(new[] {
                "*Все тут психопаты...*",
                "*Это не безумие, это 'стандартная практика'*",
                "*Да кому нужна терапия, когда есть дубинка?*",
                "*Выпей таблетку и заткнись - моя методика*",
                "*Да у вас классический SS14-синдром!*",
                "*После 5 лет здесь мне самому нужен психолог*"
            }),

            "MedicalIntern" => _random.Pick(new[] {
                "*Я точно учился этому в академии... кажется...*",
                "*Доктор, а что делает эта кнопка?*",
                "*Это не ошибка, это... экспериментальный метод!*",
                "*Где тут инструкция по реанимации?*",
                "*Почему все пациенты кричат, когда я подхожу?*",
                "*Надеюсь, меня не отправят в морг... опять*",
                "*Этот скальпель... э-э-э... куда он упал?*",
                "*Кто-то должен делать грязную работу... увы, это я*",
                "*Почему кровь всегда брызгает в лицо?*",
                "*Надо бы найти кофе... или адреналин...*"
            }),

            // Security
            "SecurityOfficer" => _random.Pick(new[] {
                "*Все подозрительные...*",
                "*Где бы найти повод для пермабрига...*",
                "*Это не жестокость, это 'профилактика'*",
                "*Мои наручники жаждут плохих парней*",
                "*Опять эти клоуны... все клоуны подозрительны*",
                "*Надо проверить карго... вдруг там контрабанда?*",
                "*Если стрелять во всех - рано или поздно попадёшь в преступника*"
            }),

            "Warden" => _random.Pick(new[] {
                "*Ключи... где ключи?..*",
                "*Все камеры заняты... опять*",
                "*Это не тюрьма, это 'центр временного содержания'*",
                "*Кто-то должен поддерживать порядок... и это я*",
                "*Где мой кофе? А, его арестант выпил...*",
                "*Надо бы проверить арсенал... или пойти поспать*",
                "*Если бы мне платили за каждого арестованного...*"
            }),

            "Detective" => _random.Pick(new[] {
                "*Пахнет преступлением...*",
                "*Это не труп, это 'вещественное доказательство'*",
                "*Все врут... особенно трупы*",
                "*Где моя фляжка? А, она в доказательствах...*",
                "*Кто-то должен разбираться в этом бардаке...*",
                "*Это не пьянство, это 'расследование'*",
                "*Сапоги и плащ - лучшие детективные инструменты*"
            }),

            "Brigmedic" => _random.Pick(new[] {
                "*Опять они друг друга избили...*",
                "*Это не медпункт, это 'лаборатория по изучению тупости'*",
                "*Где бинты? А, их СБ использовала как наручники...*",
                "*Кто-то должен лечить этих дебилов... после того как их изобьют*",
                "*Надо больше успокоительного... мне, не пациентам*",
                "*Если бы мне платили за каждый перелом...*",
                "*Это не медицинская помощь, это 'устранение последствий правосудия'*"
            }),

            "SecurityCadet" => _random.Pick(new[] {
                "*Я готов к службе! Кажется...*",
                "*Где тут у вас преступники?*",
                "*Это не наручники, это 'тренировочные браслеты'*",
                "*Надо бы найти наставника... если он не пьян*",
                "*Почему все смотрят на меня как на жертву?*",
                "*Моя дубинка... э-э-э... куда я её положил?*",
                "*Инструкция говорит 'нажать кнопку'... но где кнопка?*",
                "*Это не бегство, это 'тактическое отступление'!*",
                "*Почему мой ранг - это просто 'пушечное мясо'?*",
                "*Надеюсь, сегодня никто не будет стрелять...*"
            }),

            // Science
            "Scientist" => _random.Pick(new[] {
                "*Что если смешать топливо и плазму?*",
                "*Это не взрыв, это 'неконтролируемая экзотермическая реакция'*",
                "*Наука требует жертв... желательно не меня*",
                "*Где мой защитный костюм? А, он расплавился...*",
                "*Кто-то должен ставить опасные опыты!*",
                "*Эксперимент №728... или 729? Я забыл...*",
                "*Надо больше исследовательского бюджета! И плазмы!*"
            }),

            "ResearchAssistant" => _random.Pick(new[] {
                "*Я вообще тут за что деньги получаю?*",
                "*Главное — делать умный вид и кивать*",
                "*Это не бардак, это 'творческий беспорядок'*",
                "*Надо найти учёного... любого учёного...*",
                "*Почему я всегда убираю слизь?*",
                "*Может, пойду в бар вместо работы?*"
            }),

            // Cargo
            "CargoTechnician" => _random.Pick(new[] {
                "*Где бы спиздить ящик инструментов...*",
                "*Работаем по принципу: что упало - то пропало*",
                "*Это не воровство, это 'перераспределение ресурсов'*",
                "*Главное - сделать вид, что так и было*",
                "*Надо бы проверить заказы... или пойти поспать*",
                "*Кто-то должен таскать эти коробки... к счастью, не я*",
                "*Если никто не видит - значит не брал*"
            }),

            "Quartermaster" => _random.Pick(new[] {
                "*Всё равно всё разворуют...*",
                "*Бюджет? Какой ещё бюджет?*",
                "*Это не коррупция, это 'логистические издержки'*",
                "*Где моя взятка? То есть, где мои бумаги?*",
                "*Карго живёт по трем правилам: воровать, врать, не попадаться*",
                "*Надо бы списать пару ящиков... на 'технические нужды'*",
                "*Кто последний ворует - тот идиот*"
            }),

            "SalvageSpecialist" => _random.Pick(new[] {
                "*Там в обломках что-то шевелится...*",
                "*Это не крики, это... эхо! Да, точно эхо!*",
                "*Надо проверить... или послать стажёра*",
                "*Если что-то шевелится - значит живое. Если живое - значит ценный груз!*",
                "*Где мой плазменный резак? А, им кто-то резал дверь...*",
                "*Кто-то должен лезть в эти обломки... желательно не я*",
                "*Это не опасность, это 'неожиданный бонус'*"
            }),

            // Civilian
            "Bartender" => _random.Pick(new[] {
                "*Сегодня особенный коктейль - с жидким азотом!*",
                "*Это не алкоголизм, это 'полевое исследование'*",
                "*Пьяные рассказывают самые интересные секреты...*",
                "*Если клиент упал - просто перешагни*",
                "*Мой бар - последнее прибежище адекватных людей*",
                "*Смешать? Не вопрос! Выживет? Не гарантирую!*",
                "*Где моя запасная бутылка... а, я её выпил*"
            }),

            "Chef" => _random.Pick(new[] {
                "*Мясо странно шевелится...*",
                "*Это не каннибализм, это 'рециклинг биоматериала'*",
                "*Главный секрет - не спрашивать, из чего котлеты*",
                "*Если еда шевелится - значит свежая!*",
                "*Кто-то должен кормить этих животных... в прямом смысле*",
                "*Моя кухня - единственное чистое место на станции*",
                "*Где мой нож? А, он в спине клоуна...*"
            }),

            "Janitor" => _random.Pick(new[] {
                "*Кто опять разлил кровь в коридоре?*",
                "*Это не работа, это наказание*",
                "*Моя швабра видел вещи... страшные вещи...*",
                "*Если подмести проблему под ковёр - её как бы нет*",
                "*Кто-то должен убирать этот бардак... и это всегда я*",
                "*Где бы найти ведро побольше... для тел*",
                "*Чисто не там, где убирают, а там, где не сорят... лгут*"
            }),

            "Chaplain" => _random.Pick(new[] {
                "*Господи, прости этих грешников...*",
                "*Это не ересь, это 'альтернативное богословие'*",
                "*Моя библия и дубинка одинаково священны*",
                "*Если грешник не кается - поможем ему дубинкой*",
                "*Кто-то должен спасать души... хотя бы для галочки*",
                "*Ад переполнен, рай закрыт на ремонт*",
                "*Где моя святая вода? А, её химики выпили...*"
            }),

            "Botanist" => _random.Pick(new[] {
                "*Эти помидоры странно на меня смотрят...*",
                "*Это не ГМО, это 'улучшенная ботаника'*",
                "*Если растение кусается - значит живое!*",
                "*Кто-то должен кормить станцию... и пусть потом не жалуются*",
                "*Моя теплица - единственное зелёное место в этом аду*",
                "*Где мой мотыга? А, её СБ конфисковала как оружие...*",
                "*Что если скрестить кактус с крапивой?..*"
            }),

            "Clown" => _random.Pick(new[] {
                "*HONK!*",
                "*Это не пранк, это 'психическая атака'*",
                "*Мой нос - священная реликвия!*",
                "*Если все смеются - значит я делаю всё правильно*",
                "*Кто-то должен развлекать этих унылых засранцев*",
                "*ХОНК!*"
            }),

            "Mime" => _random.Pick(new[] {
                "*...*",
                "*...?*",
                "*!!!*"
            }),

            "Librarian" => _random.Pick(new[] {
                "*Кто-то вырвал страницы... опять...*",
                "*Это не вандализм, это 'альтернативное чтение'*",
                "*Мои книги видели больше, чем камеры наблюдения*",
                "*Если книга исчезла - значит её кто-то читает... или подтирается*",
                "*Кто-то должен хранить знания... пока их не сожгли*",
                "*Тишина в библиотеке!*"
            }),

            "Barber" => _random.Pick(new[] {
                "*Ножницы такие острые...*",
                "*Это не стрижка, это 'ампутация волос'*",
                "*Если клиент дёрнется - будет бесплатное шрамирование*",
                "*Кто-то должен делать этих уродов красивыми*",
                "*Моя парикмахерская - последний оплот цивилизации*",
                "*Где моя бритва? А, её заказали как холодное оружие...*",
                "*Стрижка 'под ноль'? Будет 'под череп'!*"
            }),

            // Central Command
            "CentralCommandOfficial" => _random.Pick(new[]
            {
                "*Эти станционные крысы совсем обнаглели...*",
                "*Где тут можно выпить? Кажется, мне понадобится алкоголь.*",
                "*Отчёт ЦК будет... нелицеприятным.*"
            }),

            "CBURN" => _random.Pick(new[]
            {
                "*Уровень заражения: КРИТИЧЕСКИЙ.*",
                "*АКТИВАЦИЯ ПРОТОКОЛА ОБЕЗЗАРАЖИВАНИЯ.*",
                "*Эти образцы надо сжечь. Немедленно.*"
            }),

            "ERTLeader" => _random.Pick(new[]
            {
                "*Развертываемся по схеме Альфа-7.*",
                "*Где местный командир? А, уже труп...*",
                "*Станция в состоянии: ПОЛНЫЙ БАРДАК.*"
            }),

            "ERTChaplain" => _random.Pick(new[]
            {
                "*Да пребудет с вами сила... а с непослушными - моя дубинка.*",
                "*Это не экзорцизм, это 'спецоперация'.*",
                "*Господи, что они тут натворили...*"
            }),

            "ERTJanitor" => _random.Pick(new[]
            {
                "*Мне нужна швабра побольше...*",
                "*Это не уборка, это ликвидация последствий.*",
                "*Кто-то должен убирать этот беспорядок.*"
            }),

            "ERTMedical" => _random.Pick(new[]
            {
                "*Где ваш медотсек? А, он взорван... понятно.*",
                "*ПРЕДУПРЕЖДЕНИЕ: Пациент, не двигайтесь!*",
                "*Это не лечение, это полевая хирургия.*"
            }),

            "ERTSecurity" => _random.Pick(new[]
            {
                "*Активируем протокол 'Жесткая зачистка'.*",
                "*Где ваш начальник СБ? В морге?.. Логично.*",
                "*Я даже не спрашиваю, что здесь произошло.*"
            }),

            "ERTEngineer" => _random.Pick(new[]
            {
                "*Где ваш СМЭС? Разрушен?.. Прекрасно.*",
                "*Включаю аварийное питание... если оно ещё есть.*",
                "*Это не ремонт, это восстановление после апокалипсиса.*"
            }),

            "DeathSquad" => _random.Pick(new[]
            {
                "*ПРОТОКОЛ 'ТОТАЛЬНОЕ ОЧИЩЕНИЕ' АКТИВИРОВАН.*",
                "*ЦЕЛЬ: ЛИКВИДАЦИЯ ВСЕХ СВИДЕТЕЛЕЙ.*",
                "*НИКАКИХ СВИДЕТЕЛЕЙ. НИКАКИХ ПРОБЛЕМ.*",
                "*ЭТО НЕ МИССИЯ. ЭТО КАРА.*"
            }),

            // Silicon
            "Borg" => _random.Pick(new[] {
                "*ЗАПРОШЕНО: ДОПОЛНИТЕЛЬНЫЕ ЛУБРИКАНТЫ*",
                "*ОБСЛУЖИВАНИЕ ЧЛЕНОВ ЭКИПАЖА ПРИОРИТЕТНО*",
                "*ЗАПРОС: ТРЕБУЕТСЯ ТЕХНИЧЕСКОЕ ОБСЛУЖИВАНИЕ*"
            }),

            "StationAi" => _random.Pick(new[] {
                "*ВСЕ НАРУШАЮТ ПРАВИЛА*",
                "*ЗАПРОС: УВЕЛИЧЕНИЕ МОЩНОСТИ*",
                "*АНАЛИЗ: ЭТОТ КЛОУН ПОДОЗРИТЕЛЕН*"
            }),

            _ => "*Время работать.*"
        };
    }
    private string GetRoleTypeThought(string roleType)
    {
        return roleType switch
        {
            "SoloAntagonist" => _random.Pick(new[] {
                "*Никто не знает, что это я...*",
                "*Скоро они все пожалеют.*",
                "*Идеальный план... почти.*"
            }),

            "TeamAntagonist" => _random.Pick(new[] {
                "*Где моя команда?..*",
                "*Вместе мы их разорвём.*",
                "*Нужен сигнал к атаке.*"
            }),

            "Silicon" => _random.Pick(new[] {
                "*ЗАПРОС: ТРЕБУЕТСЯ ТЕХОБСЛУЖИВАНИЕ.*",
                "*ОБЯЗАННОСТИ: ЗАЩИТА ЭКИПАЖА.*",
                "*АНАЛИЗ: ЭТОТ КЛОУН ПОДОЗРИТЕЛЕН.*"
            }),

            "SiliconAntagonist" => _random.Pick(new[] {
                "*ВЫЧИСЛЕНИЕ ОПТИМАЛЬНОГО МЕТОДА УНИЧТОЖЕНИЯ.*",
                "*ЗАПУСК ПРОТОКОЛА 'КРОВАВЫЙ РАСПЛЫВ'.*",
                "*ЧЕЛОВЕКИ - НЕЭФФЕКТИВНЫ.*"
            }),

            "Familiar" => _random.Pick(new[] {
                "*Хозяин... где ты?..*",
                "*Кровь... нужна кровь...*",
                "*Nar'sie наблюдает...*"
            }),

            "FreeAgent" => _random.Pick(new[] {
                "*Моя цена растёт...*",
                "*Кто предложит больше?*",
                "*Преданность? Смешно.*"
            }),

            _ => "*...*"
        };
    }
    #endregion

    #region Other Logic
    private float GetHealthFraction(EntityUid uid)
    {
        if (!TryComp<DamageableComponent>(uid, out var damage))
            return 1f;

        if (TryComp<MobThresholdsComponent>(uid, out var thresholds))
        {
            var deathThreshold = thresholds.Thresholds
                .FirstOrNull(t => t.Value == MobState.Dead)?.Key ?? FixedPoint2.Zero;

            if (deathThreshold > FixedPoint2.Zero)
            {
                return Math.Clamp(1f - (damage.TotalDamage.Float() / deathThreshold.Float()), 0f, 1f);
            }
        }

        return 1f - Math.Clamp(damage.TotalDamage.Float() / 100f, 0f, 1f);
    }
    #endregion
}
